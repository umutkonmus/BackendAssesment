services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  directoryservice:
    build:
      context: ./DirectoryService
      dockerfile: Dockerfile
    container_name: directoryservice
    ports:
      - "5000:8080"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development 
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - app-network
    restart: always

  reportservice:
    build:
      context: ./ReportService
      dockerfile: Dockerfile
    container_name: reportservice
    ports:
      - "5001:8080"  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development   
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092  
    depends_on:
      - kafka
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge